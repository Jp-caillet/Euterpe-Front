(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["react-media-slider"] = factory(require("react"));
	else
		root["react-media-slider"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.VolumeSlider = exports.ProgressSlider = exports.Slider = undefined;

	var _slider = __webpack_require__(2);

	var _slider2 = _interopRequireDefault(_slider);

	var _progressSlider = __webpack_require__(5);

	var _progressSlider2 = _interopRequireDefault(_progressSlider);

	var _volumeSlider = __webpack_require__(6);

	var _volumeSlider2 = _interopRequireDefault(_volumeSlider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Slider = _slider2.default;
	exports.ProgressSlider = _progressSlider2.default;
	exports.VolumeSlider = _volumeSlider2.default;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(3);

	var _style = __webpack_require__(4);

	var _style2 = _interopRequireDefault(_style);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	// noinspection JSUnresolvedVariable


	var Slider = function (_Component) {
	  _inherits(Slider, _Component);

	  function Slider() {
	    _classCallCheck(this, Slider);

	    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this));

	    _this.state = {
	      isHovered: false,
	      isSliding: false,
	      value: 0,
	      media: null
	    };

	    _this.onMouseMove = _this.onMouseMove.bind(_this);
	    _this.onMouseUp = _this.onMouseUp.bind(_this);
	    return _this;
	  }

	  _createClass(Slider, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _props = this.props;
	      var media = _props.media;
	      var disableHint = _props.disableHint;


	      this.applyStyle();

	      document.addEventListener('mousemove', this.onMouseMove);
	      document.addEventListener('mouseup', this.onMouseUp);

	      if (media && !this.state.media) {
	        this.setMedia(media);
	      }

	      if (disableHint || !isPointerEventsSupported()) {
	        this.setState({ disableHint: true });
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(props) {
	      var _props2 = this.props;
	      var style = _props2.style;
	      var media = _props2.media;


	      if (props.style && props.style !== style) {
	        this.applyStyle();
	      }

	      if (props.media && props.media !== media) {
	        this.setMedia(props.media);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.reset();
	      document.removeEventListener('mousemove', this.onMouseMove);
	      document.removeEventListener('mouseup', this.onMouseUp);
	    }
	  }, {
	    key: 'onMouseEnter',
	    value: function onMouseEnter(event) {
	      var media = this.state.media;

	      if (!event.buttons && media) {
	        this.setState({ isHovered: true });
	      }
	    }
	  }, {
	    key: 'onMouseLeave',
	    value: function onMouseLeave() {
	      this.setState({ isHovered: false });
	    }
	  }, {
	    key: 'onMouseDown',
	    value: function onMouseDown(event) {
	      var media = this.state.media;

	      if (!media) {
	        return;
	      }

	      event.preventDefault();
	      if (event.buttons !== 1) {
	        return;
	      }
	      this.setState({ isSliding: true });
	      this.onMouseMove(event, true);
	    }
	  }, {
	    key: 'onMouseMove',
	    value: function onMouseMove(event) {
	      var force = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	      var _state = this.state;
	      var isHovered = _state.isHovered;
	      var isSliding = _state.isSliding;


	      if (!isHovered && !isSliding && !force) {
	        return;
	      }

	      var sliderBody = this.refs.sliderBody;

	      var internalPosition = Math.max(event.clientX - offsetLeft(sliderBody), 0);
	      internalPosition = Math.min(internalPosition, sliderBody.offsetWidth);

	      var cursorValue = internalPosition / sliderBody.offsetWidth;
	      this.setState({ cursorValue: cursorValue });
	      if (isSliding || force) {
	        this.setValue(cursorValue);
	      }
	    }
	  }, {
	    key: 'onMouseUp',
	    value: function onMouseUp() {
	      var isSliding = this.state.isSliding;

	      if (!isSliding) {
	        return;
	      }
	      // noinspection JSUndefinedPropertyAssignment
	      this.state.isSliding = false;
	    }
	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.setState({
	        isHovered: false,
	        isSliding: false,
	        value: 0,
	        media: null
	      });
	    }
	  }, {
	    key: 'setMedia',
	    value: function setMedia(media) {
	      this.reset();
	      this.setState({ media: media });
	    }
	  }, {
	    key: 'setValue',
	    value: function setValue(value) {
	      this.setState({ value: value });
	    }
	  }, {
	    key: 'formatValue',
	    value: function formatValue(value) {
	      return Math.round(value * 100) / 100;
	    }
	  }, {
	    key: 'applyStyle',
	    value: function applyStyle() {
	      var _props$style = this.props.style;
	      var style = _props$style === undefined ? {} : _props$style;

	      var def = _style2.default;

	      var st = Object.keys(def).reduce(function (result, key) {
	        result[key] = capitalizeVendorPrefix(_extends({}, def[key], style[key]));
	        return result;
	      }, {});

	      st.body.background = st.colors.background;
	      st.bufferedFragment.background = st.colors.buffered;
	      st.progress.background = st.colors.progress;

	      var color = st.colors.controls;
	      st.handleHovered.background = st.handleHovered.background || color;
	      st.hintHovered.background = st.hintHovered.background || color;
	      st.hintArrow.borderTopColor = st.hintArrow.borderTopColor || color;

	      // noinspection JSUndefinedPropertyAssignment
	      this.state.style = st;
	    }
	  }, {
	    key: 'renderHint',
	    value: function renderHint() {
	      var _state2 = this.state;
	      var isHovered = _state2.isHovered;
	      var isSliding = _state2.isSliding;
	      var style = _state2.style;
	      var cursorValue = _state2.cursorValue;
	      var disableHint = _state2.disableHint;


	      var text = this.formatValue(cursorValue);

	      if (disableHint || !text) {
	        return null;
	      }

	      var showHandle = isHovered || isSliding;

	      var hintStyle = _extends({}, showHandle ? style.hintHovered : style.hint, {
	        left: Math.floor(cursorValue * 100) + '%'
	      });

	      return React.createElement(
	        'div',
	        { style: hintStyle },
	        text,
	        React.createElement('div', { style: style.hintArrow })
	      );
	    }
	  }, {
	    key: 'renderInternal',
	    value: function renderInternal() {
	      return null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _state3 = this.state;
	      var isHovered = _state3.isHovered;
	      var isSliding = _state3.isSliding;
	      var value = _state3.value;
	      var style = _state3.style;

	      var showHandle = isHovered || isSliding;

	      var progressStyle = _extends({}, style.progress, {
	        width: Math.floor(value * 100) + '%'
	      });

	      return React.createElement(
	        'div',
	        {
	          style: style.container,
	          onMouseDown: this.onMouseDown.bind(this),
	          onMouseEnter: this.onMouseEnter.bind(this),
	          onMouseLeave: this.onMouseLeave.bind(this)
	        },
	        this.renderHint(),
	        React.createElement(
	          'div',
	          { style: style.body, ref: 'sliderBody' },
	          this.renderInternal(),
	          React.createElement(
	            'div',
	            { style: progressStyle },
	            React.createElement('a', { style: showHandle ? style.handleHovered : style.handle })
	          )
	        )
	      );
	    }
	  }]);

	  return Slider;
	}(_react.Component);

	/**
	 * Return element left offset on a page
	 * @param {HTMLElement} element
	 * @returns {number}
	 */


	Slider.propTypes = {
	  style: _react.PropTypes.object,
	  media: _react.PropTypes.object,
	  disableHint: _react.PropTypes.bool
	};
	exports.default = Slider;
	function offsetLeft(element) {
	  return element ? element.offsetLeft + offsetLeft(element.offsetParent) : 0;
	}

	function isPointerEventsSupported() {
	  // We cannot check pointer-events support in IE9 and 10 by another way
	  return !(document.documentMode < 11);
	}

	/**
	 * Capitalize the first char of vendor prefix
	 * @param {Object} styleObject
	 * @returns {Object}
	 */
	function capitalizeVendorPrefix(styleObject) {
	  return Object.keys(styleObject).reduce(function (result, key) {
	    var newKey = key;
	    if (key.startsWith('webkit') || key.startsWith('moz') || key.startsWith('ms')) {
	      newKey = newKey.charAt(0).toUpperCase() + newKey.substring(1);
	    }
	    result[newKey] = styleObject[key];
	    return result;
	  }, {});
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = {"colors":{"background":"rgba(0, 0, 0, .05)","progress":"rgba(0, 101, 225, .5)","controls":"#5796ce","buffered":"#ccc"},"container":{"position":"relative","height":"10px","padding":"4px 0 10px","cursor":"pointer","webkitTouchCallout":"none","webkitUserSelect":"none","mozUserSelect":"none","msUserSelect":"none","userSelect":"none","webkitTapHighlightColor":"transparent"},"body":{"height":"3px","position":"relative"},"bufferedContainer":{"position":"absolute","top":"0","left":"0","bottom":"0","right":"0"},"bufferedFragment":{"display":"block","position":"absolute","height":"100%"},"progress":{"position":"relative","height":"100%"},"handle":{"opacity":"0"},"handleHovered":{"display":"block","float":"right","width":"10px","height":"10px","margin":"-3px -7px 0 0","borderRadius":"100%","opacity":"1","transition":"opacity .3s"},"hint":{"position":"absolute","opacity":"0","top":"-200px","display":"none"},"hintHovered":{"position":"absolute","left":"0","top":"-28px","marginLeft":"2px","padding":".2em .3em","transform":"translateX(-50%)","color":"#fff","borderRadius":"2px","border":"1px solid #5796ce","fontSize":"70%","pointerEvents":"none","opacity":"1","transition":"opacity .3s"},"hintArrow":{"position":"absolute","left":"50%","bottom":"-11px","width":"0","height":"0","marginLeft":"-6px","border":"6px solid transparent"}};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _slider = __webpack_require__(2);

	var _slider2 = _interopRequireDefault(_slider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ProgressSlider = function (_Slider) {
	  _inherits(ProgressSlider, _Slider);

	  function ProgressSlider() {
	    _classCallCheck(this, ProgressSlider);

	    // noinspection JSUndefinedPropertyAssignment
	    var _this = _possibleConstructorReturn(this, (ProgressSlider.__proto__ || Object.getPrototypeOf(ProgressSlider)).call(this));

	    _this.state.progress = [];
	    _this.onTimeUpdate = _this.onTimeUpdate.bind(_this);
	    _this.onEnded = _this.onEnded.bind(_this);
	    _this.onProgress = _this.onProgress.bind(_this);
	    _this.onLoadStart = _this.onLoadStart.bind(_this);
	    return _this;
	  }

	  _createClass(ProgressSlider, [{
	    key: 'onMouseUp',
	    value: function onMouseUp() {
	      if (!this.state.isSliding) {
	        return;
	      }
	      _get(ProgressSlider.prototype.__proto__ || Object.getPrototypeOf(ProgressSlider.prototype), 'onMouseUp', this).call(this);
	      this.setValue(this.state.value, true);
	    }
	  }, {
	    key: 'onTimeUpdate',
	    value: function onTimeUpdate(event) {
	      if (this.state.isSliding) {
	        return;
	      }
	      var media = event.currentTarget;
	      this.setValue(media.currentTime / media.duration, false);
	    }
	  }, {
	    key: 'onEnded',
	    value: function onEnded() {
	      this.setValue(0);
	    }
	  }, {
	    key: 'onProgress',
	    value: function onProgress(event) {
	      var media = event.currentTarget;
	      var progress = [];
	      var duration = media.duration;

	      if (!media.buffered) {
	        return;
	      }

	      for (var i = 0; i < media.buffered.length; i++) {
	        var start = media.buffered.start(i) / duration;
	        var end = media.buffered.end(i) / duration;
	        progress.push({
	          left: start * 100 + '%',
	          width: (end - start) * 100 + '%'
	        });
	      }

	      this.setState({ progress: progress });
	    }
	  }, {
	    key: 'onLoadStart',
	    value: function onLoadStart() {
	      this.setValue(0);
	      this.setState({ progress: [] });
	    }
	  }, {
	    key: 'reset',
	    value: function reset() {
	      var media = this.state.media;


	      _get(ProgressSlider.prototype.__proto__ || Object.getPrototypeOf(ProgressSlider.prototype), 'reset', this).call(this);
	      // noinspection JSUndefinedPropertyAssignment
	      this.state.progress = [];

	      if (!media) {
	        return;
	      }

	      media.removeEventListener('ended', this.onEnded, false);
	      media.removeEventListener('progress', this.onProgress, false);
	      media.removeEventListener('timeupdate', this.onTimeUpdate, false);
	      media.removeEventListener('loadstart', this.onLoadStart, false);
	    }
	  }, {
	    key: 'setMedia',
	    value: function setMedia(media) {
	      this.setValue(0, false);
	      _get(ProgressSlider.prototype.__proto__ || Object.getPrototypeOf(ProgressSlider.prototype), 'setMedia', this).call(this, media);

	      media.addEventListener('ended', this.onEnded, false);
	      media.addEventListener('progress', this.onProgress, false);
	      media.addEventListener('timeupdate', this.onTimeUpdate, false);
	      media.addEventListener('loadstart', this.onLoadStart, false);
	    }
	  }, {
	    key: 'setValue',
	    value: function setValue(value) {
	      var applyToMedia = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	      var media = this.state.media;

	      if (!media) {
	        return;
	      }
	      _get(ProgressSlider.prototype.__proto__ || Object.getPrototypeOf(ProgressSlider.prototype), 'setValue', this).call(this, value);
	      if (applyToMedia) {
	        media.currentTime = media.duration * value;
	      }
	    }
	  }, {
	    key: 'formatValue',
	    value: function formatValue(value) {
	      var media = this.state.media;

	      if (!media) {
	        return '';
	      }

	      var seconds = Math.floor(value * media.duration);
	      if (!(seconds > -1)) {
	        return '';
	      }

	      return new Date(seconds * 1000).toISOString().substr(10, 9).replace('T00:', '').replace('T0', '').replace('T', '');
	    }
	  }, {
	    key: 'renderInternal',
	    value: function renderInternal() {
	      var _state = this.state;
	      var progress = _state.progress;
	      var style = _state.style;


	      return React.createElement(
	        'div',
	        { style: style.bufferedContainer },
	        progress.map(function (buffer, i) {
	          return React.createElement('span', {
	            key: i,
	            style: _extends({}, style.bufferedFragment, {
	              marginLeft: buffer.left,
	              width: buffer.width
	            })
	          });
	        })
	      );
	    }
	  }]);

	  return ProgressSlider;
	}(_slider2.default);

	exports.default = ProgressSlider;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _slider = __webpack_require__(2);

	var _slider2 = _interopRequireDefault(_slider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var VolumeSlider = function (_Slider) {
	  _inherits(VolumeSlider, _Slider);

	  function VolumeSlider() {
	    _classCallCheck(this, VolumeSlider);

	    var _this = _possibleConstructorReturn(this, (VolumeSlider.__proto__ || Object.getPrototypeOf(VolumeSlider)).call(this));

	    _this.onVolumeChange = _this.onVolumeChange.bind(_this);
	    return _this;
	  }

	  _createClass(VolumeSlider, [{
	    key: 'setValue',
	    value: function setValue(value) {
	      var applyToMedia = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	      _get(VolumeSlider.prototype.__proto__ || Object.getPrototypeOf(VolumeSlider.prototype), 'setValue', this).call(this, value);
	      var media = this.state.media;

	      if (!media) {
	        return;
	      }
	      if (applyToMedia) {
	        media.volume = value;
	      }
	    }
	  }, {
	    key: 'formatValue',
	    value: function formatValue(value) {
	      if (undefined === value) {
	        return '';
	      }
	      return Math.floor(value * 100) + '%';
	    }
	  }, {
	    key: 'setMedia',
	    value: function setMedia(media) {
	      _get(VolumeSlider.prototype.__proto__ || Object.getPrototypeOf(VolumeSlider.prototype), 'setMedia', this).call(this, media);
	      this.setValue(media.volume, false);
	      media.addEventListener('volumechange', this.onVolumeChange, false);
	    }
	  }, {
	    key: 'reset',
	    value: function reset() {
	      _get(VolumeSlider.prototype.__proto__ || Object.getPrototypeOf(VolumeSlider.prototype), 'reset', this).call(this);
	      var media = this.state.media;


	      if (!media) {
	        return;
	      }
	      media.removeEventListener('volumechange', this.onVolumeChange, false);
	    }
	  }, {
	    key: 'onVolumeChange',
	    value: function onVolumeChange(event) {
	      this.setValue(event.currentTarget.volume, false);
	    }
	  }]);

	  return VolumeSlider;
	}(_slider2.default);

	exports.default = VolumeSlider;

/***/ }
/******/ ])
});
;